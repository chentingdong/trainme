name: DB Migration

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      DATABASE_URL:
        required: true
      DIRECT_URL:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.4.0 --activate

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --filter @trainme/db

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build
        working-directory: ./db
        run: pnpm build

      - name: Convert Prisma Migrations
        run: |
          pnpm -w run convert-migrations

      - name: Deploy Prisma Migrations
        working-directory: ./db
        run: pnpm prisma migrate deploy
        timeout-minutes: 5

      - name: Seed database
        working-directory: ./db
        run: |
          pnpm seed
